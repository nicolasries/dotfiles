# #+TITLE: Configuration
#+SUBTITLE: Some additional configuration
* Modes
** Org

   default note file

   #+BEGIN_SRC emacs-lisp
     (setq org-default-notes-file "~/Cloud/dotfiles/notes.org")
   #+END_SRC

** Org Noter
   https://github.com/weirdNox/org-noter/

   Annotate PDF files within org-mode
   #+BEGIN_SRC emacs-lisp
     (use-package org-noter
       :ensure t)
   #+END_SRC

** Plantuml
   #+BEGIN_SRC emacs-lisp
     (setq plantuml-jar-path "/opt/plantuml/plantuml.jar")
   #+END_SRC
* Keybindings
** General

   Number incrementing

   #+BEGIN_SRC emacs-lisp
     ;; (global-set-key (kbd "C-a") 'evil-numbers/inc-at-pt)
     ;; (global-set-key (kbd "C-x") 'evil-numbers/dec-at-pt)
   #+END_SRC

   Jump forward like vim

   #+BEGIN_SRC emacs-lisp
     ;; (global-set-key (kbd "C-i") 'evil-jump-forward)
   #+END_SRC

   Quit ediff without prompt

   #+BEGIN_SRC emacs-lisp
     (defun disable-y-or-n-p (orig-fun &rest args)
       (cl-letf (((symbol-function 'y-or-n-p) (lambda (prompt) t)))
         (apply orig-fun args)))
     (advice-add 'ediff-quit :around #'disable-y-or-n-p)
   #+END_SRC

   Kill processes without prompt

   #+BEGIN_SRC emacs-lisp
     (setq confirm-kill-processes nil)
   #+END_SRC

   No annoying prompts when creating a new file

   #+BEGIN_SRC emacs-lisp
     (setq confirm-nonexistent-file-or-buffer nil
           helm-ff-newfile-prompt-p nil
           ido-create-new-buffer 'always)
   #+END_SRC
** Modes
*** Org
* Mode line

  Disable spaceline modules

  #+BEGIN_SRC emacs-lisp
    (spaceline-toggle-buffer-size-off)
    (spaceline-toggle-hud-off)
    (spaceline-toggle-minor-modes-off)
  #+END_SRC

  format git status

  #+BEGIN_SRC emacs-lisp
    ;; (defadvice vc-mode-line (after strip-backend () activate)
    ;;   (when (stringp vc-mode)
    ;;     (let ((noback (replace-regexp-in-string
    ;;                    (format "^ %s" (vc-backend buffer-file-name))
    ;;                    " " vc-mode)))
    ;;       (setq vc-mode noback))))        ;
  #+END_SRC
* UI

  show eldoc near point
  buggy, doesn't display current arguments
  disabled for now

  #+BEGIN_SRC emacs-lisp
    ;;     (defun nri/eldoc-display-near-point (format-string &rest args)
    ;;      "Display eldoc message near point."
    ;;      (when format-string
    ;;        (pos-tip-show (apply 'format format-string args) nil nil nil)))
    ;; (setq eldoc-message-function #'nri/eldoc-display-near-point)
  #+END_SRC

  Company Mode Formatting

  #+BEGIN_SRC emacs-lisp
    ;; auto completion
    (custom-set-faces
     '(company-tooltip-common
       ((t (:inherit company-tooltip :weight bold :underline nil))))
     '(company-tooltip-common-selection
       ((t (:inherit company-tooltip-selection :weight bold :underline nil)))))
    (setq company-tooltip-limit 5
          company-tooltip-align-annotations t
          company-go-show-annotation t
          company-tooltip-minimum 5)
  #+END_SRC
* Terminal

  - make URLs clickable

  #+BEGIN_SRC emacs-lisp
    (add-hook 'term-mode-hook
              (lambda ()
                (goto-address-mode)))
  #+END_SRC
* Git

  start commit message in insert mode

  #+BEGIN_SRC emacs-lisp
    (add-hook 'git-commit-mode-hook 'evil-insert-state)
  #+END_SRC

* Misc

  load local config file

  #+BEGIN_SRC emacs-lisp
    (defconst local-config-path "~/.spacemacs.d/local-config.org")
    (if (file-exists-p local-config-path) (org-babel-load-file local-config-path))
  #+END_SRC
* Anki
  #+BEGIN_SRC emacs-lisp
(setq anki-editor-use-math-jax t)
  #+END_SRC
